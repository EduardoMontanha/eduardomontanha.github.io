{"ast":null,"code":"import { window } from 'ssr-window';\nimport Utils from '../../utils/utils';\nimport Support from '../../utils/support';\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n\n  attach(target, options = {}) {\n    const swiper = this;\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    swiper.observer.observers.push(observer);\n  },\n\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    swiper.observer.attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    swiper.observer.attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  },\n\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach(observer => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  }\n\n};\nexport default {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  },\n\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: []\n      }\n    });\n  },\n\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/modules/observer/observer.js"],"names":["window","Utils","Support","Observer","func","MutationObserver","WebkitMutationObserver","attach","target","options","swiper","ObserverFunc","observer","mutations","length","emit","observerUpdate","requestAnimationFrame","setTimeout","observe","attributes","childList","characterData","observers","push","init","params","observeParents","containerParents","$el","parents","i","observeSlideChildren","$wrapperEl","destroy","forEach","disconnect","name","create","extend","bind","on"],"mappings":"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","sourcesContent":["import { window } from 'ssr-window';\nimport Utils from '../../utils/utils';\nimport Support from '../../utils/support';\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nexport default {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}