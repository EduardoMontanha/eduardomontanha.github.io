{"ast":null,"code":"function checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked; // events\n\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nexport default {\n  checkOverflow\n};","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/check-overflow/index.js"],"names":["checkOverflow","swiper","params","wasLocked","isLocked","lastSlidePosition","slides","length","slidesOffsetBefore","spaceBetween","offsetWidth","slidesOffsetAfter","size","snapGrid","allowSlideNext","allowSlidePrev","emit","isEnd","navigation","update"],"mappings":"AACA,SAASA,aAAT,GAAyB;AACvB,QAAMC,MAAM,GAAG,IAAf;AACA,QAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,QAAMC,SAAS,GAAGF,MAAM,CAACG,QAAzB;AACA,QAAMC,iBAAiB,GAAGJ,MAAM,CAACK,MAAP,CAAcC,MAAd,GAAuB,CAAvB,IAA6BL,MAAM,CAACM,kBAAP,GAA6BN,MAAM,CAACO,YAAP,IAAuBR,MAAM,CAACK,MAAP,CAAcC,MAAd,GAAuB,CAA9C,CAA7B,GAAmFN,MAAM,CAACK,MAAP,CAAc,CAAd,CAAD,CAAmBI,WAApB,GAAmCT,MAAM,CAACK,MAAP,CAAcC,MAAzL;;AAEA,MAAIL,MAAM,CAACM,kBAAP,IAA6BN,MAAM,CAACS,iBAApC,IAAyDN,iBAA7D,EAAgF;AAC9EJ,IAAAA,MAAM,CAACG,QAAP,GAAkBC,iBAAiB,IAAIJ,MAAM,CAACW,IAA9C;AACD,GAFD,MAEO;AACLX,IAAAA,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACY,QAAP,CAAgBN,MAAhB,KAA2B,CAA7C;AACD;;AAEDN,EAAAA,MAAM,CAACa,cAAP,GAAwB,CAACb,MAAM,CAACG,QAAhC;AACAH,EAAAA,MAAM,CAACc,cAAP,GAAwB,CAACd,MAAM,CAACG,QAAhC,CAbuB,CAevB;;AACA,MAAID,SAAS,KAAKF,MAAM,CAACG,QAAzB,EAAmCH,MAAM,CAACe,IAAP,CAAYf,MAAM,CAACG,QAAP,GAAkB,MAAlB,GAA2B,QAAvC;;AAEnC,MAAID,SAAS,IAAIA,SAAS,KAAKF,MAAM,CAACG,QAAtC,EAAgD;AAC9CH,IAAAA,MAAM,CAACgB,KAAP,GAAe,KAAf;AACAhB,IAAAA,MAAM,CAACiB,UAAP,CAAkBC,MAAlB;AACD;AACF;;AAED,eAAe;AAAEnB,EAAAA;AAAF,CAAf","sourcesContent":["\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nexport default { checkOverflow };\n"]},"metadata":{},"sourceType":"module"}