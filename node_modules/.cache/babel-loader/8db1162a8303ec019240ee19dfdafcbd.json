{"ast":null,"code":"export default function () {\n  const swiper = this;\n  swiper.emit('beforeLoopFix');\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  swiper.emit('loopFix');\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/loop/loopFix.js"],"names":["swiper","emit","activeIndex","slides","loopedSlides","allowSlidePrev","allowSlideNext","snapGrid","rtlTranslate","rtl","newIndex","snapTranslate","diff","getTranslate","length","slideChanged","slideTo","setTranslate","translate"],"mappings":"AAAA,eAAe,YAAY;AACzB,QAAMA,MAAM,GAAG,IAAf;AAEAA,EAAAA,MAAM,CAACC,IAAP,CAAY,eAAZ;AAEA,QAAM;AACJC,IAAAA,WADI;AACSC,IAAAA,MADT;AACiBC,IAAAA,YADjB;AAC+BC,IAAAA,cAD/B;AAC+CC,IAAAA,cAD/C;AAC+DC,IAAAA,QAD/D;AACyEC,IAAAA,YAAY,EAAEC;AADvF,MAEFT,MAFJ;AAGA,MAAIU,QAAJ;AACAV,EAAAA,MAAM,CAACK,cAAP,GAAwB,IAAxB;AACAL,EAAAA,MAAM,CAACM,cAAP,GAAwB,IAAxB;AAEA,QAAMK,aAAa,GAAG,CAACJ,QAAQ,CAACL,WAAD,CAA/B;AACA,QAAMU,IAAI,GAAGD,aAAa,GAAGX,MAAM,CAACa,YAAP,EAA7B,CAbyB,CAezB;;AACA,MAAIX,WAAW,GAAGE,YAAlB,EAAgC;AAC9BM,IAAAA,QAAQ,GAAIP,MAAM,CAACW,MAAP,GAAiBV,YAAY,GAAG,CAAjC,GAAuCF,WAAlD;AACAQ,IAAAA,QAAQ,IAAIN,YAAZ;AACA,UAAMW,YAAY,GAAGf,MAAM,CAACgB,OAAP,CAAeN,QAAf,EAAyB,CAAzB,EAA4B,KAA5B,EAAmC,IAAnC,CAArB;;AACA,QAAIK,YAAY,IAAIH,IAAI,KAAK,CAA7B,EAAgC;AAC9BZ,MAAAA,MAAM,CAACiB,YAAP,CAAoB,CAACR,GAAG,GAAG,CAACT,MAAM,CAACkB,SAAX,GAAuBlB,MAAM,CAACkB,SAAlC,IAA+CN,IAAnE;AACD;AACF,GAPD,MAOO,IAAIV,WAAW,IAAIC,MAAM,CAACW,MAAP,GAAgBV,YAAnC,EAAiD;AACtD;AACAM,IAAAA,QAAQ,GAAG,CAACP,MAAM,CAACW,MAAR,GAAiBZ,WAAjB,GAA+BE,YAA1C;AACAM,IAAAA,QAAQ,IAAIN,YAAZ;AACA,UAAMW,YAAY,GAAGf,MAAM,CAACgB,OAAP,CAAeN,QAAf,EAAyB,CAAzB,EAA4B,KAA5B,EAAmC,IAAnC,CAArB;;AACA,QAAIK,YAAY,IAAIH,IAAI,KAAK,CAA7B,EAAgC;AAC9BZ,MAAAA,MAAM,CAACiB,YAAP,CAAoB,CAACR,GAAG,GAAG,CAACT,MAAM,CAACkB,SAAX,GAAuBlB,MAAM,CAACkB,SAAlC,IAA+CN,IAAnE;AACD;AACF;;AACDZ,EAAAA,MAAM,CAACK,cAAP,GAAwBA,cAAxB;AACAL,EAAAA,MAAM,CAACM,cAAP,GAAwBA,cAAxB;AAEAN,EAAAA,MAAM,CAACC,IAAP,CAAY,SAAZ;AACD","sourcesContent":["export default function () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n"]},"metadata":{},"sourceType":"module"}