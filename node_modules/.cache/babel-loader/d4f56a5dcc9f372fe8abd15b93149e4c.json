{"ast":null,"code":"/* eslint no-param-reassign: \"off\" */\nimport $ from '../../utils/dom';\nimport Utils from '../../utils/utils';\nimport Support from '../../utils/support';\nimport SwiperClass from '../../utils/class';\nimport update from './update/index';\nimport translate from './translate/index';\nimport transition from './transition/index';\nimport slide from './slide/index';\nimport loop from './loop/index';\nimport grabCursor from './grab-cursor/index';\nimport manipulation from './manipulation/index';\nimport events from './events/index';\nimport breakpoints from './breakpoints/index';\nimport classes from './classes/index';\nimport images from './images/index';\nimport checkOverflow from './check-overflow/index';\nimport defaults from './defaults';\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images\n};\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n    super(params);\n    Object.keys(prototypes).forEach(prototypeGroup => {\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    }); // Swiper Instance\n\n    const swiper = this;\n\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n\n    Object.keys(swiper.modules).forEach(moduleName => {\n      const module = swiper.modules[moduleName];\n\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            enabled: true\n          };\n        }\n\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n          params[moduleParamName].enabled = true;\n        }\n\n        if (!params[moduleParamName]) params[moduleParamName] = {\n          enabled: false\n        };\n      }\n    }); // Extend defaults with modules params\n\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams); // Extend defaults with passed params\n\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params); // Save Dom lib\n\n    swiper.$ = $; // Find el\n\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper); // Find Wrapper\n\n    let $wrapperEl;\n\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`)); // Children needs to return slot items\n\n      $wrapperEl.children = options => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    } // Extend Swiper\n\n\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      // Classes\n      classNames: [],\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    }); // Install Modules\n\n    swiper.useModules(); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n\n\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.params.direction = newDirection;\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      $el,\n      $wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n\n}\n\nexport default Swiper;","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/core-class.js"],"names":["$","Utils","Support","SwiperClass","update","translate","transition","slide","loop","grabCursor","manipulation","events","breakpoints","classes","images","checkOverflow","defaults","prototypes","extendedDefaults","Swiper","constructor","args","el","params","length","Object","extend","keys","forEach","prototypeGroup","protoMethod","prototype","swiper","modules","moduleName","module","moduleParamName","moduleParams","enabled","swiperParams","useModulesParams","originalParams","passedParams","$el","undefined","swipers","each","index","containerEl","newParams","push","data","$wrapperEl","shadowRoot","querySelector","wrapperClass","children","options","wrapperEl","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","direction","isVertical","rtl","dir","toLowerCase","css","rtlTranslate","wrongRTL","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","allowSlideNext","allowSlidePrev","touchEvents","touch","desktop","pointerEvents","touchEventsTouch","start","move","end","cancel","touchEventsDesktop","simulateTouch","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","formElements","lastClickTime","now","clickTimeout","velocities","allowMomentumBounce","isTouchEvent","startMoving","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","useModules","init","slidesPerViewDynamic","size","swiperSize","spv","centeredSlides","slideSize","swiperSlideSize","breakLoop","i","destroyed","setBreakpoint","updateSize","updateSlides","updateProgress","updateSlidesClasses","setTranslate","translateValue","newTranslate","Math","min","max","maxTranslate","minTranslate","updateActiveIndex","translated","freeMode","autoHeight","updateAutoHeight","slidesPerView","slideTo","watchOverflow","emit","changeDirection","newDirection","needUpdate","currentDirection","removeClass","containerModifierClass","addClass","slideIndex","slideEl","style","width","height","initialized","addClasses","loopCreate","setGrabCursor","preloadImages","initialSlide","loopedSlides","runCallbacksOnInit","attachEvents","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttr","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","join","eventsListeners","eventName","off","deleteProps","extendDefaults","newDefaults","Class"],"mappings":"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","sourcesContent":["/* eslint no-param-reassign: \"off\" */\nimport $ from '../../utils/dom';\nimport Utils from '../../utils/utils';\nimport Support from '../../utils/support';\n\nimport SwiperClass from '../../utils/class';\n\nimport update from './update/index';\nimport translate from './translate/index';\nimport transition from './transition/index';\nimport slide from './slide/index';\nimport loop from './loop/index';\nimport grabCursor from './grab-cursor/index';\nimport manipulation from './manipulation/index';\nimport events from './events/index';\nimport breakpoints from './breakpoints/index';\nimport classes from './classes/index';\nimport images from './images/index';\nimport checkOverflow from './check-overflow/index';\n\nimport defaults from './defaults';\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nexport default Swiper;\n"]},"metadata":{},"sourceType":"module"}