{"ast":null,"code":"var _jsxFileName = \"/Users/mac2/Desktop/git/thedigitalmoney/digital-money/src/context/LanguageContext.js\";\nimport React from 'react';\nimport Cookie from '../components/common/Cookie';\nlet languagesData,\n    //Get languages data from local JSON file\nlanguage = navigator.language.slice(0, 2),\n    //Set browser language as default\nlangCookie = Cookie.getCookie('dmAppLanguage'); //Get cookie data.\n//If there is a cookie with the preferred language\n\nif (langCookie) language = langCookie; //Update HTML language attribute\n\ndocument.querySelector('html').setAttribute('lang', language);\n\nswitch (language) {\n  case \"en\":\n    languagesData = require('../assets/data/en.lang.json');\n    break;\n\n  case \"es\":\n    languagesData = require('../assets/data/es.lang.json');\n    break;\n\n  case \"pt\":\n    languagesData = require('../assets/data/pt.lang.json');\n    break;\n\n  default:\n    console.log(\"entrou aqui\");\n    languagesData = require('../assets/data/languages.json');\n    break;\n}\n\nexport const LanguageContext = React.createContext();\n\nclass LanguageContextProvider extends React.Component {\n  render() {\n    return React.createElement(LanguageContext.Provider, {\n      value: languagesData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default LanguageContextProvider;","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/src/context/LanguageContext.js"],"names":["React","Cookie","languagesData","language","navigator","slice","langCookie","getCookie","document","querySelector","setAttribute","require","console","log","LanguageContext","createContext","LanguageContextProvider","Component","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,IAAIC,aAAJ;AAAA,IAAmB;AACfC,QAAQ,GAAGC,SAAS,CAACD,QAAV,CAAmBE,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,CADf;AAAA,IAC+C;AAC3CC,UAAU,GAAGL,MAAM,CAACM,SAAP,CAAiB,eAAjB,CAFjB,C,CAEoD;AAEpD;;AACA,IAAID,UAAJ,EACIH,QAAQ,GAAGG,UAAX,C,CAEJ;;AACAE,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,YAA/B,CAA4C,MAA5C,EAAoDP,QAApD;;AAEA,QAAQA,QAAR;AACI,OAAK,IAAL;AACID,IAAAA,aAAa,GAAGS,OAAO,CAAC,6BAAD,CAAvB;AACA;;AAEJ,OAAK,IAAL;AACIT,IAAAA,aAAa,GAAGS,OAAO,CAAC,6BAAD,CAAvB;AACA;;AAEJ,OAAK,IAAL;AACIT,IAAAA,aAAa,GAAGS,OAAO,CAAC,6BAAD,CAAvB;AACA;;AAEJ;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAX,IAAAA,aAAa,GAAGS,OAAO,CAAC,+BAAD,CAAvB;AACA;AAhBR;;AAmBA,OAAO,MAAMG,eAAe,GAAGd,KAAK,CAACe,aAAN,EAAxB;;AAEP,MAAMC,uBAAN,SAAsChB,KAAK,CAACiB,SAA5C,CAAsD;AAElDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAEhB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKiB,KAAL,CAAWC,QADhB,CADJ;AAKH;;AARiD;;AAWtD,eAAeJ,uBAAf","sourcesContent":["import React from 'react';\nimport Cookie from '../components/common/Cookie';\n\nlet languagesData, //Get languages data from local JSON file\n    language = navigator.language.slice(0, 2), //Set browser language as default\n    langCookie = Cookie.getCookie('dmAppLanguage'); //Get cookie data.\n\n//If there is a cookie with the preferred language\nif (langCookie)\n    language = langCookie;\n\n//Update HTML language attribute\ndocument.querySelector('html').setAttribute('lang', language);\n\nswitch (language) {\n    case \"en\":\n        languagesData = require('../assets/data/en.lang.json');\n        break;\n\n    case \"es\":\n        languagesData = require('../assets/data/es.lang.json');\n        break;\n\n    case \"pt\":\n        languagesData = require('../assets/data/pt.lang.json');\n        break;\n\n    default:\n        console.log(\"entrou aqui\");\n        languagesData = require('../assets/data/languages.json');\n        break;\n}\n\nexport const LanguageContext = React.createContext();\n\nclass LanguageContextProvider extends React.Component {\n\n    render() {\n        return(\n            <LanguageContext.Provider value={languagesData}>\n                {this.props.children}\n            </LanguageContext.Provider>\n        );\n    }\n}\n\nexport default LanguageContextProvider;"]},"metadata":{},"sourceType":"module"}