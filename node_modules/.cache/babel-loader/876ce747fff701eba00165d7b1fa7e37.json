{"ast":null,"code":"export default function (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth'\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/translate/translateTo.js"],"names":["translate","speed","params","runCallbacks","translateBounds","internal","swiper","wrapperEl","animating","preventInteractionOnTransition","minTranslate","maxTranslate","newTranslate","updateProgress","cssMode","isH","isHorizontal","scrollTo","behavior","setTransition","setTranslate","emit","onTranslateToWrapperTransitionEnd","transitionEnd","e","destroyed","target","$wrapperEl","removeEventListener","addEventListener"],"mappings":"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","sourcesContent":["export default function (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}