{"ast":null,"code":"import $ from '../../../utils/dom';\nexport default function (translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n    if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/update/updateSlidesProgress.js"],"names":["$","translate","swiper","params","slides","rtlTranslate","rtl","length","swiperSlideOffset","updateSlidesOffset","offsetCenter","removeClass","slideVisibleClass","visibleSlidesIndexes","visibleSlides","i","slide","slideProgress","centeredSlides","minTranslate","swiperSlideSize","spaceBetween","watchSlidesVisibility","autoHeight","slideBefore","slideAfter","slidesSizesGrid","isVisible","size","push","eq","addClass","progress"],"mappings":"AAAA,OAAOA,CAAP,MAAc,oBAAd;AAEA,eAAe,UAAUC,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,CAAlD,EAAqD;AAClE,QAAMC,MAAM,GAAG,IAAf;AACA,QAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AAEA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAY,EAAEC;AAAxB,MAAgCJ,MAAtC;AAEA,MAAIE,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACzB,MAAI,OAAOH,MAAM,CAAC,CAAD,CAAN,CAAUI,iBAAjB,KAAuC,WAA3C,EAAwDN,MAAM,CAACO,kBAAP;AAExD,MAAIC,YAAY,GAAG,CAACT,SAApB;AACA,MAAIK,GAAJ,EAASI,YAAY,GAAGT,SAAf,CAVyD,CAYlE;;AACAG,EAAAA,MAAM,CAACO,WAAP,CAAmBR,MAAM,CAACS,iBAA1B;AAEAV,EAAAA,MAAM,CAACW,oBAAP,GAA8B,EAA9B;AACAX,EAAAA,MAAM,CAACY,aAAP,GAAuB,EAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAAM,CAACG,MAA3B,EAAmCQ,CAAC,IAAI,CAAxC,EAA2C;AACzC,UAAMC,KAAK,GAAGZ,MAAM,CAACW,CAAD,CAApB;AACA,UAAME,aAAa,GAAG,CACnBP,YAAY,IAAIP,MAAM,CAACe,cAAP,GAAwBhB,MAAM,CAACiB,YAAP,EAAxB,GAAgD,CAApD,CAAb,GAAuEH,KAAK,CAACR,iBADzD,KAEjBQ,KAAK,CAACI,eAAN,GAAwBjB,MAAM,CAACkB,YAFd,CAAtB;;AAGA,QAAIlB,MAAM,CAACmB,qBAAP,IAAiCnB,MAAM,CAACe,cAAP,IAAyBf,MAAM,CAACoB,UAArE,EAAkF;AAChF,YAAMC,WAAW,GAAG,EAAEd,YAAY,GAAGM,KAAK,CAACR,iBAAvB,CAApB;AACA,YAAMiB,UAAU,GAAGD,WAAW,GAAGtB,MAAM,CAACwB,eAAP,CAAuBX,CAAvB,CAAjC;AACA,YAAMY,SAAS,GAAIH,WAAW,IAAI,CAAf,IAAoBA,WAAW,GAAGtB,MAAM,CAAC0B,IAAP,GAAc,CAAjD,IACJH,UAAU,GAAG,CAAb,IAAkBA,UAAU,IAAIvB,MAAM,CAAC0B,IADnC,IAEJJ,WAAW,IAAI,CAAf,IAAoBC,UAAU,IAAIvB,MAAM,CAAC0B,IAFvD;;AAGA,UAAID,SAAJ,EAAe;AACbzB,QAAAA,MAAM,CAACY,aAAP,CAAqBe,IAArB,CAA0Bb,KAA1B;AACAd,QAAAA,MAAM,CAACW,oBAAP,CAA4BgB,IAA5B,CAAiCd,CAAjC;AACAX,QAAAA,MAAM,CAAC0B,EAAP,CAAUf,CAAV,EAAagB,QAAb,CAAsB5B,MAAM,CAACS,iBAA7B;AACD;AACF;;AACDI,IAAAA,KAAK,CAACgB,QAAN,GAAiB1B,GAAG,GAAG,CAACW,aAAJ,GAAoBA,aAAxC;AACD;;AACDf,EAAAA,MAAM,CAACY,aAAP,GAAuBd,CAAC,CAACE,MAAM,CAACY,aAAR,CAAxB;AACD","sourcesContent":["import $ from '../../../utils/dom';\n\nexport default function (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n"]},"metadata":{},"sourceType":"module"}