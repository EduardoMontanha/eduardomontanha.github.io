{"ast":null,"code":"import Device from '../../../utils/device';\nexport default function () {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el\n  } = swiper;\n  const suffixes = [];\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n\n  if (Device.android) {\n    suffixes.push('android');\n  }\n\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach(suffix => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n  $el.addClass(classNames.join(' '));\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/classes/addClasses.js"],"names":["Device","swiper","classNames","params","rtl","$el","suffixes","push","direction","freeMode","autoHeight","slidesPerColumn","slidesPerColumnFill","android","ios","cssMode","forEach","suffix","containerModifierClass","addClass","join"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AAEA,eAAe,YAAY;AACzB,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM;AACJC,IAAAA,UADI;AACQC,IAAAA,MADR;AACgBC,IAAAA,GADhB;AACqBC,IAAAA;AADrB,MAEFJ,MAFJ;AAGA,QAAMK,QAAQ,GAAG,EAAjB;AAEAA,EAAAA,QAAQ,CAACC,IAAT,CAAc,aAAd;AACAD,EAAAA,QAAQ,CAACC,IAAT,CAAcJ,MAAM,CAACK,SAArB;;AAEA,MAAIL,MAAM,CAACM,QAAX,EAAqB;AACnBH,IAAAA,QAAQ,CAACC,IAAT,CAAc,WAAd;AACD;;AACD,MAAIJ,MAAM,CAACO,UAAX,EAAuB;AACrBJ,IAAAA,QAAQ,CAACC,IAAT,CAAc,YAAd;AACD;;AACD,MAAIH,GAAJ,EAAS;AACPE,IAAAA,QAAQ,CAACC,IAAT,CAAc,KAAd;AACD;;AACD,MAAIJ,MAAM,CAACQ,eAAP,GAAyB,CAA7B,EAAgC;AAC9BL,IAAAA,QAAQ,CAACC,IAAT,CAAc,UAAd;;AACA,QAAIJ,MAAM,CAACS,mBAAP,KAA+B,QAAnC,EAA6C;AAC3CN,MAAAA,QAAQ,CAACC,IAAT,CAAc,iBAAd;AACD;AACF;;AACD,MAAIP,MAAM,CAACa,OAAX,EAAoB;AAClBP,IAAAA,QAAQ,CAACC,IAAT,CAAc,SAAd;AACD;;AACD,MAAIP,MAAM,CAACc,GAAX,EAAgB;AACdR,IAAAA,QAAQ,CAACC,IAAT,CAAc,KAAd;AACD;;AAED,MAAIJ,MAAM,CAACY,OAAX,EAAoB;AAClBT,IAAAA,QAAQ,CAACC,IAAT,CAAc,UAAd;AACD;;AAEDD,EAAAA,QAAQ,CAACU,OAAT,CAAkBC,MAAD,IAAY;AAC3Bf,IAAAA,UAAU,CAACK,IAAX,CAAgBJ,MAAM,CAACe,sBAAP,GAAgCD,MAAhD;AACD,GAFD;AAIAZ,EAAAA,GAAG,CAACc,QAAJ,CAAajB,UAAU,CAACkB,IAAX,CAAgB,GAAhB,CAAb;AACD","sourcesContent":["import Device from '../../../utils/device';\n\nexport default function () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n"]},"metadata":{},"sourceType":"module"}