{"ast":null,"code":"import { window } from 'ssr-window';\nexport default function (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/breakpoints/getBreakpoint.js"],"names":["window","breakpoints","undefined","breakpoint","points","Object","keys","map","point","indexOf","minRatio","parseFloat","substr","value","innerHeight","sort","a","b","parseInt","i","length","innerWidth"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,eAAe,UAAUC,WAAV,EAAuB;AACpC;AACA,MAAI,CAACA,WAAL,EAAkB,OAAOC,SAAP;AAClB,MAAIC,UAAU,GAAG,KAAjB;AAEA,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA8BC,KAAD,IAAW;AACrD,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAN,CAAc,GAAd,MAAuB,CAAxD,EAA2D;AACzD,YAAMC,QAAQ,GAAGC,UAAU,CAACH,KAAK,CAACI,MAAN,CAAa,CAAb,CAAD,CAA3B;AACA,YAAMC,KAAK,GAAGb,MAAM,CAACc,WAAP,GAAqBJ,QAAnC;AACA,aAAO;AAAEG,QAAAA,KAAF;AAASL,QAAAA;AAAT,OAAP;AACD;;AACD,WAAO;AAAEK,MAAAA,KAAK,EAAEL,KAAT;AAAgBA,MAAAA;AAAhB,KAAP;AACD,GAPc,CAAf;AASAJ,EAAAA,MAAM,CAACW,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUC,QAAQ,CAACF,CAAC,CAACH,KAAH,EAAU,EAAV,CAAR,GAAwBK,QAAQ,CAACD,CAAC,CAACJ,KAAH,EAAU,EAAV,CAAtD;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACgB,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,UAAM;AAAEX,MAAAA,KAAF;AAASK,MAAAA;AAAT,QAAmBT,MAAM,CAACe,CAAD,CAA/B;;AACA,QAAIN,KAAK,IAAIb,MAAM,CAACqB,UAApB,EAAgC;AAC9BlB,MAAAA,UAAU,GAAGK,KAAb;AACD;AACF;;AACD,SAAOL,UAAU,IAAI,KAArB;AACD","sourcesContent":["import { window } from 'ssr-window';\n\nexport default function (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n"]},"metadata":{},"sourceType":"module"}