{"ast":null,"code":"/* eslint no-unused-vars: \"off\" */\nexport default function (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach(snap => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n\n  let prevIndex;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","map":{"version":3,"sources":["/Users/mac2/Desktop/git/thedigitalmoney/digital-money/node_modules/swiper/src/components/core/slide/slidePrev.js"],"names":["speed","params","runCallbacks","internal","swiper","animating","snapGrid","slidesGrid","rtlTranslate","loop","loopFix","_clientLeft","$wrapperEl","clientLeft","translate","normalize","val","Math","floor","abs","normalizedTranslate","normalizedSnapGrid","map","normalizedSlidesGrid","currentSnap","indexOf","prevSnap","cssMode","forEach","snap","prevIndex","activeIndex","slideTo"],"mappings":"AAAA;AACA,eAAe,UAAUA,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAA9B,EAAqCE,YAAY,GAAG,IAApD,EAA0DC,QAA1D,EAAoE;AACjF,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM;AACJH,IAAAA,MADI;AACII,IAAAA,SADJ;AACeC,IAAAA,QADf;AACyBC,IAAAA,UADzB;AACqCC,IAAAA;AADrC,MAEFJ,MAFJ;;AAIA,MAAIH,MAAM,CAACQ,IAAX,EAAiB;AACf,QAAIJ,SAAJ,EAAe,OAAO,KAAP;AACfD,IAAAA,MAAM,CAACM,OAAP,GAFe,CAGf;;AACAN,IAAAA,MAAM,CAACO,WAAP,GAAqBP,MAAM,CAACQ,UAAP,CAAkB,CAAlB,EAAqBC,UAA1C;AACD;;AACD,QAAMC,SAAS,GAAGN,YAAY,GAAGJ,MAAM,CAACU,SAAV,GAAsB,CAACV,MAAM,CAACU,SAA5D;;AACA,WAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,QAAIA,GAAG,GAAG,CAAV,EAAa,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASH,GAAT,CAAX,CAAR;AACb,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACD;;AACD,QAAMI,mBAAmB,GAAGL,SAAS,CAACD,SAAD,CAArC;AACA,QAAMO,kBAAkB,GAAGf,QAAQ,CAACgB,GAAT,CAAcN,GAAD,IAASD,SAAS,CAACC,GAAD,CAA/B,CAA3B;AACA,QAAMO,oBAAoB,GAAGhB,UAAU,CAACe,GAAX,CAAgBN,GAAD,IAASD,SAAS,CAACC,GAAD,CAAjC,CAA7B;AAEA,QAAMQ,WAAW,GAAGlB,QAAQ,CAACe,kBAAkB,CAACI,OAAnB,CAA2BL,mBAA3B,CAAD,CAA5B;AACA,MAAIM,QAAQ,GAAGpB,QAAQ,CAACe,kBAAkB,CAACI,OAAnB,CAA2BL,mBAA3B,IAAkD,CAAnD,CAAvB;;AACA,MAAI,OAAOM,QAAP,KAAoB,WAApB,IAAmCzB,MAAM,CAAC0B,OAA9C,EAAuD;AACrDrB,IAAAA,QAAQ,CAACsB,OAAT,CAAkBC,IAAD,IAAU;AACzB,UAAI,CAACH,QAAD,IAAaN,mBAAmB,IAAIS,IAAxC,EAA8CH,QAAQ,GAAGG,IAAX;AAC/C,KAFD;AAGD;;AACD,MAAIC,SAAJ;;AACA,MAAI,OAAOJ,QAAP,KAAoB,WAAxB,EAAqC;AACnCI,IAAAA,SAAS,GAAGvB,UAAU,CAACkB,OAAX,CAAmBC,QAAnB,CAAZ;AACA,QAAII,SAAS,GAAG,CAAhB,EAAmBA,SAAS,GAAG1B,MAAM,CAAC2B,WAAP,GAAqB,CAAjC;AACpB;;AACD,SAAO3B,MAAM,CAAC4B,OAAP,CAAeF,SAAf,EAA0B9B,KAA1B,EAAiCE,YAAjC,EAA+CC,QAA/C,CAAP;AACD","sourcesContent":["/* eslint no-unused-vars: \"off\" */\nexport default function (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n"]},"metadata":{},"sourceType":"module"}